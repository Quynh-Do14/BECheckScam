spring.application.name=checkscamv2
server.port=8080

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://103.57.221.26:3306/hlcfwrewhosting_check_scam?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=hlcfwrewhosting_check_scam
spring.datasource.password=techbyteDev

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format-sql=true

###
#config jwt
checkscam.jwt.base64-secret=OxGm3cuh+eGvHosY4JGGAOvCU6QzTQVyAw7crvtCilLqqWKV+YX/V0ucUfXWqPYCJXLcexH7/4BSnRH4qNVaBA==
#expiration : 10 day (seconds = 24 * 60 * 60)

checkscam.jwt.access-token-validity-in-seconds=86400
checkscam.jwt.refresh-token-validity-in-seconds=8640000


gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
gemini.api.key=AIzaSyCD2k8A4xtSk1fsSS6G0IunnHvn_27YRmY
gemini.timeout=30000
gemini.max-retries=3
#
###
spring.servlet.multipart.max-file-size=50MB

spring.servlet.multipart.max-request-size=50MB

spring.servlet.multipart.enabled=true

app.upload-dir=uploads

google.recaptcha.secret=6LfG6TArAAAAACIVaSfqfaSGjvbiJdsNa_zA2idc

google.recaptcha.verify-url=https://www.google.com/recaptcha/api/siteverify

# OpenRouter API Configuration
openrouter.api.url=https://openrouter.ai/api/v1/chat/completions
openrouter.api.key=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
openrouter.model=google/gemini-2.0-flash-001

openrouter.timeout=30000
openrouter.max-retries=3
openrouter.temperature=0.7
openrouter.max-tokens=1200

# Google OAuth Client ID (cho vi?c xác th?c ID Token t? frontend)
google.oauth2.client-id=1040843887455-1lkcsjnnsbdlkpu2ge90bi20b2ptqd7u.apps.googleusercontent.com

logging.level.com.example.checkscamv2=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# Rate Limiting
resilience4j.ratelimiter.instances.openrouter.limitForPeriod=50
resilience4j.ratelimiter.instances.openrouter.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.openrouter.timeoutDuration=0s

spring.main.allow-bean-definition-overriding=true

playwright.timeout=1000
playwright.default-protocol=https://
playwright.viewport.width=720
playwright.viewport.height=1080

spring.web.resources.static-locations=classpath:/static/,file:cache/

# Google Safe Browse
google.safe.Browse.api.key=AIzaSyA0f5CNKcpfD6BB5o-IiDlgSYfR6Zuu1bg
google.safe.Browse.api.url=https://safeBrowse.googleapis.com/v4/threatMatches:find

# Google Web Risk
google.web.risk.api.key=AIzaSyA0f5CNKcpfD6BB5o-IiDlgSYfR6Zuu1bg
google.web.risk.api.url=https://webrisk.googleapis.com/v1/uris:search

# PhishTank
phishtank.api.key=your_phish_tank_api_key
phishtank.api.url=http://checkurl.phishtank.com/checkurl/

# VirusTotal
virustotal.api.key=1439662f8a02006c444db833ea94c68c005fb860b958c9d29d10719d41d095d2
virustotal.api.url=https://www.virustotal.com/api/v3/urls

# URLScan
urlscan.api.key=01978cbe-8f0c-767e-91b7-d1d4d1db6acc
urlscan.api.url=https://urlscan.io/api/v1/scan/

# WebSocket Configuration
spring.websocket.cors.allowed-origins=http://localhost:4200,http://localhost:3000,http://127.0.0.1:4200
spring.websocket.cors.allow-credentials=false
spring.websocket.sockjs.heartbeat-time=25000
spring.websocket.sockjs.disconnect-delay=5000