spring.application.name=checkscamv2
server.port=${SERVER_PORT:8080}

spring.datasource.driver-class-name=${DB_DRIVER:com.mysql.cj.jdbc.Driver}
spring.datasource.url=${DB_URL:jdbc:mysql://103.57.221.26:3306/hlcfwrewhosting_check_scam?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&useSSL=false}
spring.datasource.username=${DB_USERNAME:hlcfwrewhosting_check_scam}
spring.datasource.password=${DB_PASSWORD:techbyteDev}

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format-sql=true

###
#config jwt
checkscam.jwt.base64-secret=${JWT_SECRET:OxGm3cuh+eGvHosY4JGGAOvCU6QzTQVyAw7crvtCilLqqWKV+YX/V0ucUfXWqPYCJXLcexH7/4BSnRH4qNVaBA==}
#expiration : 10 day (seconds = 24 * 60 * 60)

checkscam.jwt.access-token-validity-in-seconds=${JWT_ACCESS_TOKEN_VALIDITY:86400}
checkscam.jwt.refresh-token-validity-in-seconds=${JWT_REFRESH_TOKEN_VALIDITY:8640000}


gemini.api.url=${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent}
gemini.api.key=${GEMINI_API_KEY:}
gemini.timeout=${GEMINI_TIMEOUT:30000}
gemini.max-retries=${GEMINI_MAX_RETRIES:3}
#
###
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:50MB}

spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:50MB}

spring.servlet.multipart.enabled=true

app.upload-dir=${UPLOAD_DIR:uploads}

google.recaptcha.secret=${GOOGLE_RECAPTCHA_SECRET:}

google.recaptcha.verify-url=${GOOGLE_RECAPTCHA_VERIFY_URL:https://www.google.com/recaptcha/api/siteverify}

# OpenRouter API Configuration
openrouter.api.url=${OPENROUTER_API_URL:https://openrouter.ai/api/v1/chat/completions}
openrouter.api.key=${OPENROUTER_API_KEY:}
openrouter.model=${OPENROUTER_MODEL:google/gemini-2.0-flash-001}

openrouter.timeout=${OPENROUTER_TIMEOUT:30000}
openrouter.max-retries=${OPENROUTER_MAX_RETRIES:3}
openrouter.temperature=${OPENROUTER_TEMPERATURE:0.7}
openrouter.max-tokens=${OPENROUTER_MAX_TOKENS:1200}

# Google OAuth Client ID (cho vi?c xï¿½c th?c ID Token t? frontend)
google.oauth2.client-id=${GOOGLE_OAUTH2_CLIENT_ID:}

logging.level.com.example.checkscamv2=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# Rate Limiting
resilience4j.ratelimiter.instances.openrouter.limitForPeriod=50
resilience4j.ratelimiter.instances.openrouter.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.openrouter.timeoutDuration=0s

spring.main.allow-bean-definition-overriding=true

playwright.timeout=${PLAYWRIGHT_TIMEOUT:1000}
playwright.default-protocol=${PLAYWRIGHT_DEFAULT_PROTOCOL:https://}
playwright.viewport.width=${PLAYWRIGHT_VIEWPORT_WIDTH:720}
playwright.viewport.height=${PLAYWRIGHT_VIEWPORT_HEIGHT:1080}

spring.web.resources.static-locations=classpath:/static/,file:cache/,file:uploads/

# Actuator health check endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Google Safe Browse
google.safe.Browse.api.key=${GOOGLE_SAFE_BROWSE_API_KEY:}
google.safe.Browse.api.url=${GOOGLE_SAFE_BROWSE_API_URL:https://safeBrowse.googleapis.com/v4/threatMatches:find}

# Google Web Risk
google.web.risk.api.key=${GOOGLE_WEB_RISK_API_KEY:}
google.web.risk.api.url=${GOOGLE_WEB_RISK_API_URL:https://webrisk.googleapis.com/v1/uris:search}

# PhishTank
phishtank.api.key=${PHISHTANK_API_KEY:}
phishtank.api.url=${PHISHTANK_API_URL:http://checkurl.phishtank.com/checkurl/}

# VirusTotal
virustotal.api.key=${VIRUSTOTAL_API_KEY:}
virustotal.api.url=${VIRUSTOTAL_API_URL:https://www.virustotal.com/api/v3/urls}

# URLScan
urlscan.api.key=${URLSCAN_API_KEY:}
urlscan.api.url=${URLSCAN_API_URL:https://urlscan.io/api/v1/scan/}

# WEBSOCKET DISABLED - Comment out WebSocket configuration
# WebSocket Configuration
spring.websocket.cors.allowed-origins=${WEBSOCKET_CORS_ALLOWED_ORIGINS:\
  http://localhost:4200,\
  https://localhost:4200,\
  http://localhost:3000,\
  https://localhost:3000,\
  http://127.0.0.1:4200,\
  https://127.0.0.1:4200,\
  https://ai6.vn,\
  https://www.ai6.vn\
  }
spring.websocket.cors.allow-credentials=true
spring.websocket.sockjs.heartbeat-time=25000
spring.websocket.sockjs.disconnect-delay=5000

# Email Service Configuration (JavaMailSender)
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:vnswann@gmail.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:pnmztvkcxhkqzfxd}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.test-connection=${SPRING_MAIL_TEST_CONNECTION:false}

# lien quan den xac nhan mail
app.frontend.url=${APP_FRONTEND_URL:https://ai6.vn}