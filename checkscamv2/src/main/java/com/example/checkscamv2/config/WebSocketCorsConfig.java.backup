package com.example.checkscamv2.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.http.server.ServerHttpRequest;
import org.springframework.http.server.ServerHttpResponse;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.config.annotation.WebSocketConfigurer;
import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;
import org.springframework.web.socket.server.HandshakeInterceptor;

import java.util.Map;

@Configuration
public class WebSocketCorsConfig implements WebSocketConfigurer {

    @Override
    public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {
        // Custom CORS interceptor for WebSocket
        registry.addHandler(new NoOpWebSocketHandler(), "/ws-cors")
                .setAllowedOrigins("http://localhost:4200", "http://localhost:3000", "http://127.0.0.1:4200")
                .addInterceptors(new CustomCorsHandshakeInterceptor());
    }

    // Custom handshake interceptor để kiểm soát CORS
    private static class CustomCorsHandshakeInterceptor implements HandshakeInterceptor {
        
        @Override
        public boolean beforeHandshake(
                ServerHttpRequest request, 
                ServerHttpResponse response,
                WebSocketHandler wsHandler, 
                Map<String, Object> attributes) throws Exception {
            
            String origin = request.getHeaders().getOrigin();
            
            // Kiểm tra origin có hợp lệ không
            boolean isValidOrigin = origin != null && (
                origin.equals("http://localhost:4200") ||
                origin.equals("http://localhost:3000") ||
                origin.equals("http://127.0.0.1:4200")
            );
            
            if (isValidOrigin) {
                // Thêm CORS headers
                response.getHeaders().add("Access-Control-Allow-Origin", origin);
                response.getHeaders().add("Access-Control-Allow-Credentials", "false");
                response.getHeaders().add("Access-Control-Allow-Methods", "GET, POST, OPTIONS");
                response.getHeaders().add("Access-Control-Allow-Headers", "*");
            }
            
            return isValidOrigin;
        }

        @Override
        public void afterHandshake(
                ServerHttpRequest request, 
                ServerHttpResponse response,
                WebSocketHandler wsHandler, 
                Exception exception) {
            // No additional processing needed after handshake
        }
    }

    // Dummy handler (không dùng vì chúng ta dùng STOMP)
    private static class NoOpWebSocketHandler extends org.springframework.web.socket.handler.TextWebSocketHandler {
        // Empty implementation
    }
}
